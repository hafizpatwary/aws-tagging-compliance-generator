[
  "a4b:CreateAddressBook",
  "a4b:CreateBusinessReportSchedule",
  "a4b:CreateConferenceProvider",
  "a4b:CreateContact",
  "a4b:CreateGatewayGroup",
  "a4b:CreateNetworkProfile",
  "a4b:CreateProfile",
  "a4b:CreateSkillGroup",
  "a4b:RegisterAVSDevice",
  "amplifyuibuilder:CreateComponent",
  "amplifyuibuilder:CreateForm",
  "amplifyuibuilder:CreateTheme",
  "amplifyuibuilder:StartCodegenJob",
  "appconfig:CreateApplication",
  "appconfig:CreateDeploymentStrategy",
  "appconfig:CreateExtension",
  "appconfig:CreateExtensionAssociation",
  "appflow:CreateFlow",
  "appflow:RegisterConnector",
  "mgn:CreateApplication",
  "mgn:CreateLaunchConfigurationTemplate",
  "mgn:CreateReplicationConfigurationTemplate",
  "mgn:CreateVcenterClientForMgn",
  "mgn:CreateWave",
  "mgn:RegisterAgentForMgn",
  "appstream:CreateAppBlock",
  "appsync:CreateGraphqlApi",
  "auditmanager:CreateAssessment",
  "auditmanager:CreateAssessmentFramework",
  "auditmanager:CreateControl",
  "backup:CopyIntoBackupVault",
  "backup-gateway:CreateGateway",
  "backup-gateway:ImportHypervisorConfiguration",
  "billingconductor:CreateCustomLineItem",
  "billingconductor:CreatePricingPlan",
  "billingconductor:CreatePricingRule",
  "braket:CreateJob",
  "braket:CreateQuantumTask",
  "bugbust:CreateEvent",
  "acm:RequestCertificate",
  "chime:CreateAppInstance",
  "chime:CreateAppInstanceBot",
  "chime:CreateAppInstanceUser",
  "chime:CreateMediaCapturePipeline",
  "chime:CreateMediaConcatenationPipeline",
  "chime:CreateMediaInsightsPipelineConfiguration",
  "chime:CreateMediaLiveConnectorPipeline",
  "chime:CreateMeeting",
  "chime:CreateMeetingWithAttendees",
  "chime:CreateSipMediaApplication",
  "chime:CreateVoiceConnector",
  "chime:CreateVoiceProfileDomain",
  "cleanrooms:CreateAnalysisTemplate",
  "cleanrooms:CreateCollaboration",
  "cleanrooms:CreateConfiguredTable",
  "cleanrooms:CreateConfiguredTableAssociation",
  "cleanrooms:CreateConfiguredTableAssociation",
  "cleanrooms:CreateMembership",
  "servicediscovery:CreateHttpNamespace",
  "servicediscovery:CreatePrivateDnsNamespace",
  "servicediscovery:CreatePublicDnsNamespace",
  "servicediscovery:TagResource",
  "servicediscovery:UntagResource",
  "cloud9:CreateEnvironmentEC2",
  "cloud9:CreateEnvironmentSSH",
  "cloudformation:CreateStackSet",
  "cloudwatch:ListManagedInsightRules",
  "cloudwatch:PutManagedInsightRules",
  "cloudwatch:TagResource",
  "applicationinsights:TagResource",
  "evidently:CreateExperiment",
  "evidently:CreateFeature",
  "evidently:CreateLaunch",
  "evidently:CreateProject",
  "evidently:CreateSegment",
  "oam:CreateSink",
  "synthetics:CreateCanary",
  "synthetics:CreateGroup",
  "codeartifact:CreateDomain",
  "codeartifact:CreateRepository",
  "codecatalyst:AcceptConnection",
  "codeguru-profiler:CreateProfilingGroup",
  "codeguru-reviewer:AssociateRepository",
  "codestar:CreateProject",
  "codestar-connections:CreateConnection",
  "codestar-connections:CreateHost",
  "codestar-notifications:DeleteTarget",
  "codestar-notifications:ListTargets",
  "cognito-identity:CreateIdentityPool",
  "cognito-idp:CreateUserPool",
  "connect:CreateInstance",
  "voiceid:CreateDomain",
  "wisdom:CreateAssistant",
  "wisdom:CreateKnowledgeBase",
  "wisdom:TagResource",
  "ce:CreateAnomalyMonitor",
  "ce:CreateAnomalySubscription",
  "ce:CreateCostCategoryDefinition",
  "dataexchange:CreateDataSet",
  "dlm:CreateLifecyclePolicy",
  "datapipeline:CreatePipeline",
  "dms:CreateDataProvider",
  "dms:CreateEndpoint",
  "dms:CreateEventSubscription",
  "dms:CreateInstanceProfile",
  "dms:CreateReplicationInstance",
  "dms:CreateReplicationSubnetGroup",
  "dms:ImportCertificate",
  "datasync:CreateAgent",
  "datasync:CreateLocationAzureBlob",
  "datasync:CreateLocationEfs",
  "datasync:CreateLocationFsxLustre",
  "datasync:CreateLocationFsxOntap",
  "datasync:CreateLocationFsxOpenZfs",
  "datasync:CreateLocationFsxWindows",
  "datasync:CreateLocationHdfs",
  "datasync:CreateLocationNfs",
  "datasync:CreateLocationObjectStorage",
  "datasync:CreateLocationS3",
  "datasync:CreateLocationSmb",
  "datazonecontrol:CreateDataSource",
  "datazonecontrol:CreateEnvironment",
  "deepracer:CreateCar",
  "deepracer:CreateLeaderboard",
  "detective:CreateGraph",
  "devicefarm:CreateProject",
  "ds:ConnectDirectory",
  "ds:CreateDirectory",
  "ds:CreateIdentityPoolDirectory",
  "ds:CreateMicrosoftAD",
  "docdb-elastic:CreateCluster",
  "ec2:AcceptAddressTransfer",
  "ec2:AllocateAddress",
  "ec2:AllocateHosts",
  "ec2:AssociateIpamResourceDiscovery",
  "ec2:AuthorizeSecurityGroupEgress",
  "ec2:AuthorizeSecurityGroupIngress",
  "ec2:CopySnapshot",
  "ec2:CreateCapacityReservation",
  "ec2:CreateCapacityReservationFleet",
  "ec2:CreateCarrierGateway",
  "ec2:CreateClientVpnEndpoint",
  "ec2:CreateCoipPool",
  "ec2:CreateCustomerGateway",
  "ec2:CreateDhcpOptions",
  "ec2:CreateEgressOnlyInternetGateway",
  "ec2:CreateFleet",
  "ec2:CreateFleet",
  "ec2:CreateFleet",
  "ec2:CreateFlowLogs",
  "ec2:CreateFpgaImage",
  "ec2:CreateImage",
  "ec2:CreateImage",
  "ec2:CreateInstanceConnectEndpoint",
  "ec2:CreateInstanceEventWindow",
  "ec2:CreateInstanceExportTask",
  "ec2:CreateInternetGateway",
  "ec2:CreateIpam",
  "ec2:CreateIpamPool",
  "ec2:CreateIpamResourceDiscovery",
  "ec2:CreateIpamScope",
  "ec2:CreateKeyPair",
  "ec2:CreateLaunchTemplate",
  "ec2:CreateLocalGatewayRouteTable",
  "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
  "ec2:CreateLocalGatewayRouteTableVpcAssociation",
  "ec2:CreateManagedPrefixList",
  "ec2:CreateNatGateway",
  "ec2:CreateNetworkAcl",
  "ec2:CreateNetworkInsightsAccessScope",
  "ec2:CreateNetworkInsightsPath",
  "ec2:CreateNetworkInterface",
  "ec2:CreatePlacementGroup",
  "ec2:CreatePublicIpv4Pool",
  "ec2:CreateReplaceRootVolumeTask",
  "ec2:CreateReplaceRootVolumeTask",
  "ec2:CreateRestoreImageTask",
  "ec2:CreateRouteTable",
  "ec2:CreateSecurityGroup",
  "ec2:CreateSnapshot",
  "ec2:CreateSnapshots",
  "ec2:CreateSubnet",
  "ec2:CreateTrafficMirrorFilter",
  "ec2:CreateTrafficMirrorSession",
  "ec2:CreateTrafficMirrorTarget",
  "ec2:CreateTransitGateway",
  "ec2:CreateTransitGatewayConnect",
  "ec2:CreateTransitGatewayConnectPeer",
  "ec2:CreateTransitGatewayMulticastDomain",
  "ec2:CreateTransitGatewayPeeringAttachment",
  "ec2:CreateTransitGatewayPolicyTable",
  "ec2:CreateTransitGatewayRouteTable",
  "ec2:CreateTransitGatewayRouteTableAnnouncement",
  "ec2:CreateTransitGatewayVpcAttachment",
  "ec2:CreateVerifiedAccessEndpoint",
  "ec2:CreateVerifiedAccessGroup",
  "ec2:CreateVerifiedAccessInstance",
  "ec2:CreateVerifiedAccessTrustProvider",
  "ec2:CreateVolume",
  "ec2:CreateVpc",
  "ec2:CreateVpcEndpoint",
  "ec2:CreateVpcEndpointServiceConfiguration",
  "ec2:CreateVpcPeeringConnection",
  "ec2:CreateVpnConnection",
  "ec2:CreateVpnGateway",
  "ec2:ExportImage",
  "ec2:ImportImage",
  "ec2:ImportImage",
  "ec2:ImportKeyPair",
  "ec2:ImportSnapshot",
  "ec2:ImportSnapshot",
  "ec2:RequestSpotInstances",
  "ec2:RunInstances",
  "ec2:RunInstances",
  "ec2:RunInstances",
  "ec2:StartNetworkInsightsAccessScopeAnalysis",
  "ec2:StartNetworkInsightsAnalysis",
  "ecr:CreateRepository",
  "ecs:CreateCapacityProvider",
  "ecs:CreateCluster",
  "ecs:CreateTaskSet",
  "ecs:RegisterTaskDefinition",
  "drs:CreateExtendedSourceServer",
  "drs:CreateLaunchConfigurationTemplate",
  "drs:CreateReplicationConfigurationTemplate",
  "drs:CreateSourceNetwork",
  "drs:CreateSourceServerForDrs",
  "elasticfilesystem:CreateFileSystem",
  "eks:CreateCluster",
  "eks:RegisterCluster",
  "elasticmapreduce:CreateStudio",
  "elasticmapreduce:RunJobFlow",
  "elasticache:CreateCacheCluster",
  "elasticache:CreateReplicationGroup",
  "elasticache:CreateSnapshot",
  "elasticache:CreateUserGroup",
  "mediaconvert:CreatePreset",
  "mediaconvert:CreateQueue",
  "mediapackage:CreateChannel",
  "mediapackage:CreateHarvestJob",
  "mediapackage:CreateOriginEndpoint",
  "mediapackage-vod:CreateAsset",
  "mediapackage-vod:CreatePackagingConfiguration",
  "mediapackage-vod:CreatePackagingGroup",
  "mediastore:CreateContainer",
  "mediatailor:CreateChannel",
  "mediatailor:CreateLiveSource",
  "mediatailor:CreateSourceLocation",
  "mediatailor:CreateVodSource",
  "mediatailor:PutPlaybackConfiguration",
  "emr-containers:CreateJobTemplate",
  "emr-containers:CreateVirtualCluster",
  "emr-serverless:CreateApplication",
  "entityresolution:CreateMatchingWorkflow",
  "entityresolution:CreateSchemaMapping",
  "entityresolution:TagResource",
  "entityresolution:UntagResource",
  "schemas:CreateDiscoverer",
  "finspace:CreateKxEnvironment",
  "forecast:CreateAutoPredictor",
  "frauddetector:BatchCreateVariable",
  "frauddetector:CreateList",
  "frauddetector:CreateVariable",
  "freertos:CreateSubscription",
  "gamelift:CreateAlias",
  "gamelift:CreateBuild",
  "gamelift:CreateFleet",
  "gamelift:CreateGameServerGroup",
  "gamelift:CreateGameSessionQueue",
  "gamelift:CreateLocation",
  "gamelift:CreateMatchmakingConfiguration",
  "gamelift:CreateMatchmakingRuleSet",
  "gamelift:CreateScript",
  "gamesparks:CreateGame",
  "gamesparks:GetExtension",
  "gamesparks:GetExtensionVersion",
  "globalaccelerator:CreateAccelerator",
  "globalaccelerator:CreateCustomRoutingAccelerator",
  "glue:CreateCrawler",
  "glue:CreateCustomEntityType",
  "glue:CreateDataQualityRuleset",
  "glue:CreateDevEndpoint",
  "glue:CreateMLTransform",
  "glue:CreateSession",
  "glue:ListCustomEntityTypes",
  "databrew:CreateDataset",
  "databrew:CreateProfileJob",
  "databrew:CreateProject",
  "databrew:CreateRecipe",
  "databrew:CreateRecipeJob",
  "databrew:CreateRuleset",
  "databrew:CreateSchedule",
  "groundstation:CreateConfig",
  "groundstation:CreateDataflowEndpointGroup",
  "groundstation:CreateEphemeris",
  "groundstation:CreateMissionProfile",
  "groundstation:ReserveContact",
  "guardduty:CreateDetector",
  "guardduty:CreateIPSet",
  "guardduty:CreateThreatIntelSet",
  "medical-imaging:CreateDatastore",
  "healthlake:CreateFHIRDatastore",
  "omics:CreateReferenceStore",
  "omics:CreateRunGroup",
  "omics:CreateSequenceStore",
  "omics:CreateWorkflow",
  "omics:StartRun",
  "connect-campaigns:ListCampaigns",
  "rolesanywhere:CreateProfile",
  "rolesanywhere:CreateTrustAnchor",
  "rolesanywhere:ImportCrl",
  "inspector2:TagResource",
  "iot:OpenTunnel",
  "iot:RegisterCACertificate",
  "iotdeviceadvisor:CreateSuiteDefinition",
  "iotdeviceadvisor:StartSuiteRun",
  "iotfleethub:CreateApplication",
  "iotfleetwise:CreateSignalCatalog",
  "iotfleetwise:ImportSignalCatalog",
  "greengrass:CreateConnectorDefinition",
  "greengrass:CreateCoreDefinition",
  "greengrass:CreateDeviceDefinition",
  "greengrass:CreateFunctionDefinition",
  "greengrass:CreateGroup",
  "greengrass:CreateLoggerDefinition",
  "greengrass:CreateResourceDefinition",
  "greengrass:CreateSubscriptionDefinition",
  "greengrass:StartBulkDeployment",
  "greengrass:CreateDeployment",
  "iotsitewise:CreateAssetModel",
  "iotsitewise:CreateGateway",
  "iotsitewise:CreatePortal",
  "iottwinmaker:CreateWorkspace",
  "iotwireless:AssociateAwsAccountWithPartnerAccount",
  "iotwireless:CreateDestination",
  "iotwireless:CreateDeviceProfile",
  "iotwireless:CreateFuotaTask",
  "iotwireless:CreateMulticastGroup",
  "iotwireless:CreateServiceProfile",
  "iotwireless:CreateWirelessDevice",
  "iotwireless:CreateWirelessGateway",
  "iotwireless:CreateWirelessGatewayTaskDefinition",
  "kendra:CreateIndex",
  "kendra-ranking:CreateRescoreExecutionPlan",
  "kms:CreateKey",
  "kinesisanalytics:CreateApplication",
  "kinesisanalytics:CreateApplication",
  "license-manager:CreateLicenseConfiguration",
  "license-manager:CreateLicenseManagerReportGenerator",
  "lightsail:CreateBucket",
  "lightsail:CreateCertificate",
  "lightsail:CreateContainerService",
  "lightsail:CreateDisk",
  "lightsail:CreateDistribution",
  "lightsail:CreateDomain",
  "lightsail:CreateInstances",
  "lightsail:CreateKeyPair",
  "lightsail:CreateLoadBalancer",
  "lightsail:CreateRelationalDatabase",
  "lightsail:CreateRelationalDatabaseSnapshot",
  "geo:CreateGeofenceCollection",
  "geo:CreateKey",
  "geo:CreateMap",
  "geo:CreatePlaceIndex",
  "geo:CreateRouteCalculator",
  "geo:CreateTracker",
  "macie2:CreateAllowList",
  "m2:CreateApplication",
  "m2:CreateEnvironment",
  "managedblockchain:CreateAccessor",
  "managedblockchain:CreateNetwork",
  "grafana:CreateWorkspace",
  "aps:CreateWorkspace",
  "vendor-insights:CreateDataSource",
  "vendor-insights:CreateSecurityProfile",
  "memorydb:CreateParameterGroup",
  "memorydb:CreateSubnetGroup",
  "memorydb:CreateUser",
  "migrationhub-orchestrator:CreateWorkflow",
  "refactor-spaces:CreateApplication",
  "refactor-spaces:CreateEnvironment",
  "refactor-spaces:CreateRoute",
  "refactor-spaces:CreateService",
  "monitron:CreateProject",
  "mq:CreateBroker",
  "mq:CreateConfiguration",
  "networkmanager:CreateGlobalNetwork",
  "osis:CreatePipeline",
  "aoss:CreateCollection",
  "aoss:TagResource",
  "organizations:CreateAccount",
  "organizations:CreateGovCloudAccount",
  "organizations:CreatePolicy",
  "outposts:CreateSite",
  "panorama:CreateApplicationInstance",
  "panorama:CreatePackage",
  "panorama:ProvisionDevice",
  "payment-cryptography:CreateKey",
  "payment-cryptography:ImportKey",
  "ses:CreateConfigurationSet",
  "ses:CreateDedicatedIpPool",
  "ses:CreateEmailIdentity",
  "sms-voice:CreateConfigurationSet",
  "sms-voice:CreateOptOutList",
  "pca-connector-ad:CreateConnector",
  "pca-connector-ad:CreateDirectoryRegistration",
  "acm-pca:CreateCertificateAuthority",
  "proton:CreateEnvironmentAccountConnection",
  "quicksight:CreateAccountCustomization",
  "quicksight:CreateCustomPermissions",
  "quicksight:CreateDataSource",
  "quicksight:CreateVPCConnection",
  "quicksight:ListDataSets",
  "quicksight:ListDataSources",
  "quicksight:ListIngestions",
  "quicksight:ListTopics",
  "quicksight:ListVPCConnections",
  "rds:CreateDBProxy",
  "resiliencehub:CreateApp",
  "resiliencehub:CreateResiliencyPolicy",
  "ram:CreatePermission",
  "ram:CreateResourceShare",
  "ram:GetResourceShares",
  "resource-explorer-2:CreateIndex",
  "resource-explorer-2:CreateView",
  "resource-groups:CreateGroup",
  "robomaker:CreateDeploymentJob",
  "robomaker:CreateFleet",
  "robomaker:CreateRobot",
  "robomaker:CreateRobotApplication",
  "robomaker:CreateSimulationApplication",
  "robomaker:CreateSimulationJob",
  "robomaker:CreateWorldTemplate",
  "robomaker:StartSimulationJobBatch",
  "route53resolver:CreateResolverQueryLogConfig",
  "s3:CreateJob",
  "s3:PutStorageLensConfiguration",
  "savingsplans:CreateSavingsPlan",
  "securityhub:CreateAutomationRule",
  "securitylake:CreateSubscriber",
  "servicequotas:TagResource",
  "servicequotas:UntagResource",
  "shield:CreateProtection",
  "shield:CreateProtectionGroup",
  "signer:PutSigningProfile",
  "swf:RegisterDomain",
  "simspaceweaver:StartSimulation",
  "snow-device-management:CreateTask",
  "snow-device-management:ListTagsForResource",
  "storagegateway:ActivateGateway",
  "storagegateway:CreateTapePool",
  "ssm:CreateActivation",
  "ssm:CreateMaintenanceWindow",
  "ssm:CreateOpsItem",
  "ssm:CreateOpsMetadata",
  "ssm:CreatePatchBaseline",
  "ssm:RegisterManagedInstance",
  "ssm-sap:RegisterApplication",
  "ssm-incidents:CreateReplicationSet",
  "ssm-incidents:CreateResponsePlan",
  "timestream:CreateScheduledQuery",
  "transcribe:CreateLanguageModel",
  "transcribe:CreateMedicalVocabulary",
  "transcribe:CreateVocabulary",
  "transcribe:CreateVocabularyFilter",
  "transcribe:StartMedicalTranscriptionJob",
  "transcribe:StartTranscriptionJob",
  "transcribe:TagResource",
  "transfer:CreateConnector",
  "transfer:CreateProfile",
  "transfer:CreateServer",
  "transfer:CreateWorkflow",
  "transfer:ImportCertificate",
  "notifications:CreateNotificationConfiguration",
  "notifications-contacts:CreateEmailContact",
  "wellarchitected:CreateProfile",
  "wellarchitected:CreateWorkload",
  "wellarchitected:ImportLens",
  "worklink:CreateFleet",
  "workspaces:CreateConnectionAlias",
  "workspaces:CreateIpGroup",
  "workspaces:CreateTags",
  "workspaces:DeleteTags",
  "workspaces-web:CreateBrowserSettings",
  "workspaces-web:CreateIpAccessSettings",
  "workspaces-web:CreateNetworkSettings",
  "workspaces-web:CreatePortal",
  "workspaces-web:CreateTrustStore",
  "workspaces-web:CreateUserAccessLoggingSettings",
  "workspaces-web:CreateUserSettings"
]