[
  "a4b:CreateAddressBook",
  "a4b:CreateBusinessReportSchedule",
  "a4b:CreateConferenceProvider",
  "a4b:CreateContact",
  "a4b:CreateGatewayGroup",
  "a4b:CreateNetworkProfile",
  "a4b:CreateProfile",
  "a4b:CreateSkillGroup",
  "a4b:RegisterAVSDevice",
  "apigateway:DELETE",
  "apigateway:PATCH",
  "apigateway:POST",
  "apigateway:PUT",
  "apigateway:DELETE",
  "apigateway:PATCH",
  "apigateway:POST",
  "apigateway:PUT",
  "appflow:CreateFlow",
  "appflow:RegisterConnector",
  "app-integrations:CreateDataIntegration",
  "app-integrations:CreateEventIntegration",
  "app-integrations:TagResource",
  "appstream:CreateAppBlock",
  "athena:CreateCapacityReservation",
  "athena:CreateDataCatalog",
  "athena:CreateWorkGroup",
  "athena:TagResource",
  "bedrock:CreateModelCustomizationJob",
  "bedrock:TagResource",
  "braket:CreateJob",
  "braket:CreateQuantumTask",
  "chime:CreateAppInstance",
  "chime:CreateAppInstanceBot",
  "chime:CreateAppInstanceUser",
  "chime:CreateMediaCapturePipeline",
  "chime:CreateMediaConcatenationPipeline",
  "chime:CreateMediaInsightsPipelineConfiguration",
  "chime:CreateMediaLiveConnectorPipeline",
  "chime:CreateMeeting",
  "chime:CreateMeetingWithAttendees",
  "chime:CreateSipMediaApplication",
  "chime:CreateVoiceConnector",
  "chime:CreateVoiceProfileDomain",
  "cloudfront:CreateStreamingDistributionWithTags",
  "cloudfront:TagResource",
  "cloudwatch:ListManagedInsightRules",
  "cloudwatch:PutManagedInsightRules",
  "cloudwatch:TagResource",
  "applicationinsights:TagResource",
  "evidently:CreateExperiment",
  "evidently:CreateFeature",
  "evidently:CreateLaunch",
  "evidently:CreateProject",
  "evidently:CreateSegment",
  "internetmonitor:CreateMonitor",
  "internetmonitor:TagResource",
  "logs:CreateLogGroup",
  "logs:PutDestination",
  "logs:TagLogGroup",
  "logs:TagResource",
  "oam:CreateSink",
  "synthetics:CreateCanary",
  "synthetics:CreateGroup",
  "codecatalyst:AcceptConnection",
  "codeguru-profiler:CreateProfilingGroup",
  "codeguru-reviewer:AssociateRepository",
  "codeguru-security:CreateScan",
  "codeguru-security:TagResource",
  "codewhisperer:CreateProfile",
  "codewhisperer:TagResource",
  "codewhisperer:UntagResource",
  "cognito-identity:CreateIdentityPool",
  "cognito-idp:CreateUserPool",
  "comprehend:CreateDataset",
  "comprehend:CreateDocumentClassifier",
  "comprehend:CreateEndpoint",
  "comprehend:CreateEntityRecognizer",
  "comprehend:CreateFlywheel",
  "comprehend:ImportModel",
  "comprehend:StartDocumentClassificationJob",
  "comprehend:StartDominantLanguageDetectionJob",
  "comprehend:StartEntitiesDetectionJob",
  "comprehend:StartEventsDetectionJob",
  "comprehend:StartKeyPhrasesDetectionJob",
  "comprehend:StartPiiEntitiesDetectionJob",
  "comprehend:StartSentimentDetectionJob",
  "comprehend:StartTargetedSentimentDetectionJob",
  "comprehend:StartTopicsDetectionJob",
  "comprehend:TagResource",
  "connect:CreateInstance",
  "cases:TagResource",
  "profile:CreateCalculatedAttributeDefinition",
  "profile:CreateDomain",
  "profile:CreateEventStream",
  "profile:CreateIntegrationWorkflow",
  "profile:PutIntegration",
  "profile:PutProfileObjectType",
  "profile:TagResource",
  "profile:UntagResource",
  "voiceid:CreateDomain",
  "wisdom:CreateAssistant",
  "wisdom:CreateKnowledgeBase",
  "wisdom:TagResource",
  "dlm:CreateLifecyclePolicy",
  "datazonecontrol:CreateDataSource",
  "datazonecontrol:CreateEnvironment",
  "detective:CreateGraph",
  "docdb-elastic:CreateCluster",
  "ec2:AcceptAddressTransfer",
  "ec2:AllocateAddress",
  "ec2:AllocateHosts",
  "ec2:AssociateIpamResourceDiscovery",
  "ec2:AuthorizeSecurityGroupEgress",
  "ec2:AuthorizeSecurityGroupIngress",
  "ec2:CopySnapshot",
  "ec2:CreateCapacityReservation",
  "ec2:CreateCapacityReservationFleet",
  "ec2:CreateCarrierGateway",
  "ec2:CreateClientVpnEndpoint",
  "ec2:CreateCoipPool",
  "ec2:CreateCustomerGateway",
  "ec2:CreateDhcpOptions",
  "ec2:CreateEgressOnlyInternetGateway",
  "ec2:CreateFleet",
  "ec2:CreateFleet",
  "ec2:CreateFleet",
  "ec2:CreateFlowLogs",
  "ec2:CreateFpgaImage",
  "ec2:CreateImage",
  "ec2:CreateImage",
  "ec2:CreateInstanceConnectEndpoint",
  "ec2:CreateInstanceEventWindow",
  "ec2:CreateInstanceExportTask",
  "ec2:CreateInternetGateway",
  "ec2:CreateIpam",
  "ec2:CreateIpamPool",
  "ec2:CreateIpamResourceDiscovery",
  "ec2:CreateIpamScope",
  "ec2:CreateKeyPair",
  "ec2:CreateLaunchTemplate",
  "ec2:CreateLocalGatewayRouteTable",
  "ec2:CreateLocalGatewayRouteTableVirtualInterfaceGroupAssociation",
  "ec2:CreateLocalGatewayRouteTableVpcAssociation",
  "ec2:CreateManagedPrefixList",
  "ec2:CreateNatGateway",
  "ec2:CreateNetworkAcl",
  "ec2:CreateNetworkInsightsAccessScope",
  "ec2:CreateNetworkInsightsPath",
  "ec2:CreateNetworkInterface",
  "ec2:CreatePlacementGroup",
  "ec2:CreatePublicIpv4Pool",
  "ec2:CreateReplaceRootVolumeTask",
  "ec2:CreateReplaceRootVolumeTask",
  "ec2:CreateRestoreImageTask",
  "ec2:CreateRouteTable",
  "ec2:CreateSecurityGroup",
  "ec2:CreateSnapshot",
  "ec2:CreateSnapshots",
  "ec2:CreateSubnet",
  "ec2:CreateTrafficMirrorFilter",
  "ec2:CreateTrafficMirrorSession",
  "ec2:CreateTrafficMirrorTarget",
  "ec2:CreateTransitGateway",
  "ec2:CreateTransitGatewayConnect",
  "ec2:CreateTransitGatewayConnectPeer",
  "ec2:CreateTransitGatewayMulticastDomain",
  "ec2:CreateTransitGatewayPeeringAttachment",
  "ec2:CreateTransitGatewayPolicyTable",
  "ec2:CreateTransitGatewayRouteTable",
  "ec2:CreateTransitGatewayRouteTableAnnouncement",
  "ec2:CreateTransitGatewayVpcAttachment",
  "ec2:CreateVerifiedAccessEndpoint",
  "ec2:CreateVerifiedAccessGroup",
  "ec2:CreateVerifiedAccessInstance",
  "ec2:CreateVerifiedAccessTrustProvider",
  "ec2:CreateVolume",
  "ec2:CreateVpc",
  "ec2:CreateVpcEndpoint",
  "ec2:CreateVpcEndpointServiceConfiguration",
  "ec2:CreateVpcPeeringConnection",
  "ec2:CreateVpnConnection",
  "ec2:CreateVpnGateway",
  "ec2:ExportImage",
  "ec2:ImportImage",
  "ec2:ImportImage",
  "ec2:ImportKeyPair",
  "ec2:ImportSnapshot",
  "ec2:ImportSnapshot",
  "ec2:RequestSpotInstances",
  "ec2:RunInstances",
  "ec2:RunInstances",
  "ec2:RunInstances",
  "ec2:StartNetworkInsightsAccessScopeAnalysis",
  "ec2:StartNetworkInsightsAnalysis",
  "autoscaling:CreateAutoScalingGroup",
  "autoscaling:CreateOrUpdateTags",
  "autoscaling:DeleteTags",
  "imagebuilder:CreateComponent",
  "imagebuilder:CreateContainerRecipe",
  "imagebuilder:CreateDistributionConfiguration",
  "imagebuilder:CreateImage",
  "imagebuilder:CreateImagePipeline",
  "imagebuilder:CreateImageRecipe",
  "imagebuilder:CreateInfrastructureConfiguration",
  "imagebuilder:ImportComponent",
  "imagebuilder:ImportVmImage",
  "imagebuilder:TagResource",
  "elasticache:CreateCacheCluster",
  "elasticache:CreateReplicationGroup",
  "elasticache:CreateSnapshot",
  "elasticache:CreateUserGroup",
  "ebs:StartSnapshot",
  "ecr:CreateRepository",
  "ecr-public:CreateRepository",
  "ecr-public:TagResource",
  "ecr-public:UntagResource",
  "ecs:CreateCapacityProvider",
  "ecs:CreateCluster",
  "ecs:CreateTaskSet",
  "ecs:RegisterTaskDefinition",
  "elasticfilesystem:CreateFileSystem",
  "eks:CreateCluster",
  "eks:RegisterCluster",
  "elasticmapreduce:CreateStudio",
  "elasticmapreduce:RunJobFlow",
  "emr-containers:CreateJobTemplate",
  "emr-containers:CreateVirtualCluster",
  "emr-serverless:CreateApplication",
  "events:CreateEventBus",
  "events:PutRule",
  "events:TagResource",
  "pipes:CreatePipe",
  "pipes:TagResource",
  "scheduler:CreateScheduleGroup",
  "scheduler:TagResource",
  "schemas:CreateDiscoverer",
  "finspace:CreateKxEnvironment",
  "forecast:CreateAutoPredictor",
  "frauddetector:BatchCreateVariable",
  "frauddetector:CreateList",
  "frauddetector:CreateVariable",
  "freertos:CreateSubscription",
  "fsx:CopyBackup",
  "fsx:CreateBackup",
  "fsx:CreateDataRepositoryAssociation",
  "fsx:CreateDataRepositoryTask",
  "fsx:CreateFileCache",
  "fsx:CreateFileSystem",
  "fsx:CreateFileSystemFromBackup",
  "fsx:CreateSnapshot",
  "fsx:CreateStorageVirtualMachine",
  "fsx:CreateVolume",
  "fsx:CreateVolumeFromBackup",
  "fsx:DeleteFileCache",
  "fsx:DeleteFileSystem",
  "fsx:DeleteVolume",
  "fsx:TagResource",
  "gamelift:CreateAlias",
  "gamelift:CreateBuild",
  "gamelift:CreateFleet",
  "gamelift:CreateGameServerGroup",
  "gamelift:CreateGameSessionQueue",
  "gamelift:CreateLocation",
  "gamelift:CreateMatchmakingConfiguration",
  "gamelift:CreateMatchmakingRuleSet",
  "gamelift:CreateScript",
  "gamesparks:CreateGame",
  "gamesparks:GetExtension",
  "gamesparks:GetExtensionVersion",
  "guardduty:CreateDetector",
  "guardduty:CreateIPSet",
  "guardduty:CreateThreatIntelSet",
  "inspector2:TagResource",
  "ivs:CreateChannel",
  "ivs:CreateParticipantToken",
  "ivs:CreateRecordingConfiguration",
  "ivs:CreateStage",
  "ivs:CreateStreamKey",
  "ivs:ImportPlaybackKeyPair",
  "ivs:ListTagsForResource",
  "ivs:TagResource",
  "ivschat:CreateChatToken",
  "ivschat:CreateLoggingConfiguration",
  "ivschat:CreateRoom",
  "ivschat:ListTagsForResource",
  "ivschat:TagResource",
  "kendra:CreateIndex",
  "kendra-ranking:CreateRescoreExecutionPlan",
  "cassandra:Alter",
  "cassandra:AlterMultiRegionResource",
  "cassandra:Create",
  "cassandra:CreateMultiRegionResource",
  "cassandra:Restore",
  "cassandra:RestoreMultiRegionTable",
  "cassandra:TagMultiRegionResource",
  "cassandra:TagResource",
  "cassandra:UnTagMultiRegionResource",
  "cassandra:UntagResource",
  "kinesisanalytics:CreateApplication",
  "kinesisanalytics:CreateApplication",
  "firehose:CreateDeliveryStream",
  "firehose:TagDeliveryStream",
  "kinesisvideo:CreateSignalingChannel",
  "kinesisvideo:CreateStream",
  "kinesisvideo:TagResource",
  "kinesisvideo:TagStream",
  "lex:PutBot",
  "lex:PutBotAlias",
  "lex:TagResource",
  "lex:UntagResource",
  "lex:CreateBot",
  "lex:CreateBotAlias",
  "lex:StartImport",
  "lex:TagResource",
  "lex:UntagResource",
  "lightsail:CreateBucket",
  "lightsail:CreateCertificate",
  "lightsail:CreateContainerService",
  "lightsail:CreateDisk",
  "lightsail:CreateDistribution",
  "lightsail:CreateDomain",
  "lightsail:CreateInstances",
  "lightsail:CreateKeyPair",
  "lightsail:CreateLoadBalancer",
  "lightsail:CreateRelationalDatabase",
  "lightsail:CreateRelationalDatabaseSnapshot",
  "geo:CreateGeofenceCollection",
  "geo:CreateKey",
  "geo:CreateMap",
  "geo:CreatePlaceIndex",
  "geo:CreateRouteCalculator",
  "geo:CreateTracker",
  "lookoutequipment:CreateDataset",
  "lookoutequipment:CreateInferenceScheduler",
  "lookoutequipment:CreateLabelGroup",
  "lookoutequipment:CreateModel",
  "lookoutequipment:ImportDataset",
  "lookoutequipment:ImportModelVersion",
  "lookoutequipment:TagResource",
  "lookoutmetrics:CreateAlert",
  "lookoutmetrics:CreateAnomalyDetector",
  "lookoutmetrics:CreateMetricSet",
  "lookoutmetrics:TagResource",
  "lookoutvision:CreateModel",
  "lookoutvision:TagResource",
  "macie2:CreateAllowList",
  "managedblockchain:CreateAccessor",
  "managedblockchain:CreateNetwork",
  "grafana:CreateWorkspace",
  "aps:CreateWorkspace",
  "kafka:CreateCluster",
  "kafka:CreateClusterV2",
  "kafka:CreateVpcConnection",
  "kafka:TagResource",
  "airflow:CreateEnvironment",
  "airflow:TagResource",
  "memorydb:CreateParameterGroup",
  "memorydb:CreateSubnetGroup",
  "memorydb:CreateUser",
  "monitron:CreateProject",
  "mq:CreateBroker",
  "mq:CreateConfiguration",
  "nimble:CreateLaunchProfile",
  "nimble:CreateStreamingImage",
  "nimble:CreateStreamingSession",
  "nimble:CreateStudio",
  "nimble:CreateStudioComponent",
  "nimble:TagResource",
  "osis:CreatePipeline",
  "aoss:CreateCollection",
  "aoss:TagResource",
  "es:AddTags",
  "es:CreateDomain",
  "es:CreateElasticsearchDomain",
  "mobiletargeting:CreateApp",
  "mobiletargeting:CreateCampaign",
  "mobiletargeting:CreateEmailTemplate",
  "mobiletargeting:CreateInAppTemplate",
  "mobiletargeting:CreateJourney",
  "mobiletargeting:CreatePushTemplate",
  "mobiletargeting:CreateSegment",
  "mobiletargeting:CreateSmsTemplate",
  "mobiletargeting:CreateVoiceTemplate",
  "mobiletargeting:TagResource",
  "mobiletargeting:UntagResource",
  "mobiletargeting:UpdateCampaign",
  "mobiletargeting:UpdateEmailTemplate",
  "mobiletargeting:UpdateInAppTemplate",
  "mobiletargeting:UpdateJourney",
  "mobiletargeting:UpdateJourneyState",
  "mobiletargeting:UpdatePushTemplate",
  "mobiletargeting:UpdateSegment",
  "mobiletargeting:UpdateSmsTemplate",
  "mobiletargeting:UpdateVoiceTemplate",
  "ses:CreateConfigurationSet",
  "ses:CreateDedicatedIpPool",
  "ses:CreateEmailIdentity",
  "sms-voice:CreateConfigurationSet",
  "sms-voice:CreateOptOutList",
  "qldb:CreateLedger",
  "qldb:PartiQLCreateTable",
  "qldb:StreamJournalToKinesis",
  "qldb:TagResource",
  "qldb:UntagResource",
  "quicksight:CreateAccountCustomization",
  "quicksight:CreateCustomPermissions",
  "quicksight:CreateDataSource",
  "quicksight:CreateVPCConnection",
  "quicksight:ListDataSets",
  "quicksight:ListDataSources",
  "quicksight:ListIngestions",
  "quicksight:ListTopics",
  "quicksight:ListVPCConnections",
  "rds:CreateDBProxy",
  "redshift:CopyClusterSnapshot",
  "redshift:CreateCluster",
  "redshift:CreateClusterParameterGroup",
  "redshift:CreateClusterSecurityGroup",
  "redshift:CreateClusterSnapshot",
  "redshift:CreateClusterSubnetGroup",
  "redshift:CreateEventSubscription",
  "redshift:CreateHsmClientCertificate",
  "redshift:CreateHsmConfiguration",
  "redshift:CreateSnapshotCopyGrant",
  "redshift:CreateSnapshotSchedule",
  "redshift:CreateTags",
  "redshift:CreateUsageLimit",
  "redshift-serverless:CreateNamespace",
  "redshift-serverless:CreateWorkgroup",
  "redshift-serverless:TagResource",
  "rekognition:CopyProjectVersion",
  "rekognition:CreateCollection",
  "rekognition:CreateProjectVersion",
  "rekognition:CreateStreamProcessor",
  "rekognition:TagResource",
  "route53-recovery-control-config:CreateCluster",
  "route53-recovery-control-config:CreateControlPanel",
  "route53-recovery-control-config:CreateSafetyRule",
  "route53-recovery-control-config:TagResource",
  "route53-recovery-control-config:UntagResource",
  "route53-recovery-readiness:CreateCell",
  "route53-recovery-readiness:CreateReadinessCheck",
  "route53-recovery-readiness:CreateRecoveryGroup",
  "route53-recovery-readiness:CreateResourceSet",
  "route53-recovery-readiness:TagResource",
  "route53-recovery-readiness:UntagResource",
  "route53resolver:CreateResolverQueryLogConfig",
  "s3:CreateJob",
  "s3:PutStorageLensConfiguration",
  "glacier:AddTagsToVault",
  "sagemaker:AddTags",
  "sagemaker:CreateAction",
  "sagemaker:CreateAlgorithm",
  "sagemaker:CreateApp",
  "sagemaker:CreateAppImageConfig",
  "sagemaker:CreateArtifact",
  "sagemaker:CreateAutoMLJob",
  "sagemaker:CreateAutoMLJobV2",
  "sagemaker:CreateCodeRepository",
  "sagemaker:CreateCompilationJob",
  "sagemaker:CreateContext",
  "sagemaker:CreateDataQualityJobDefinition",
  "sagemaker:CreateDeviceFleet",
  "sagemaker:CreateDomain",
  "sagemaker:CreateEdgeDeploymentPlan",
  "sagemaker:CreateEdgeDeploymentStage",
  "sagemaker:CreateEdgePackagingJob",
  "sagemaker:CreateEndpoint",
  "sagemaker:CreateEndpointConfig",
  "sagemaker:CreateExperiment",
  "sagemaker:CreateFeatureGroup",
  "sagemaker:CreateFlowDefinition",
  "sagemaker:CreateHub",
  "sagemaker:CreateHumanTaskUi",
  "sagemaker:CreateHyperParameterTuningJob",
  "sagemaker:CreateImage",
  "sagemaker:CreateInferenceExperiment",
  "sagemaker:CreateInferenceRecommendationsJob",
  "sagemaker:CreateLabelingJob",
  "sagemaker:CreateModel",
  "sagemaker:CreateModelBiasJobDefinition",
  "sagemaker:CreateModelCard",
  "sagemaker:CreateModelExplainabilityJobDefinition",
  "sagemaker:CreateModelPackage",
  "sagemaker:CreateModelPackageGroup",
  "sagemaker:CreateModelQualityJobDefinition",
  "sagemaker:CreateMonitoringSchedule",
  "sagemaker:CreateNotebookInstance",
  "sagemaker:CreatePipeline",
  "sagemaker:CreateProcessingJob",
  "sagemaker:CreateProject",
  "sagemaker:CreateSpace",
  "sagemaker:CreateStudioLifecycleConfig",
  "sagemaker:CreateTrainingJob",
  "sagemaker:CreateTransformJob",
  "sagemaker:CreateTrial",
  "sagemaker:CreateTrialComponent",
  "sagemaker:CreateUserProfile",
  "sagemaker:CreateWorkforce",
  "sagemaker:CreateWorkteam",
  "sagemaker:DeleteFeatureGroup",
  "sagemaker:ImportHubContent",
  "sagemaker:RegisterDevices",
  "sagemaker:UpdateMonitoringSchedule",
  "sagemaker:UpdateProject",
  "sagemaker-geospatial:StartEarthObservationJob",
  "sagemaker-geospatial:StartVectorEnrichmentJob",
  "sagemaker-geospatial:TagResource",
  "securitylake:CreateSubscriber",
  "ses:CreateConfigurationSet",
  "ses:CreateContactList",
  "ses:CreateDedicatedIpPool",
  "ses:CreateDeliverabilityTestReport",
  "ses:CreateEmailIdentity",
  "ses:TagResource",
  "swf:RegisterDomain",
  "sns:CreateTopic",
  "sns:TagResource",
  "sns:UntagResource",
  "sqs:CreateQueue",
  "sqs:TagQueue",
  "sqs:UntagQueue",
  "timestream:CreateScheduledQuery",
  "transcribe:CreateLanguageModel",
  "transcribe:CreateMedicalVocabulary",
  "transcribe:CreateVocabulary",
  "transcribe:CreateVocabularyFilter",
  "transcribe:StartMedicalTranscriptionJob",
  "transcribe:StartTranscriptionJob",
  "transcribe:TagResource",
  "translate:CreateParallelData",
  "translate:ImportTerminology",
  "translate:TagResource",
  "vpc-lattice:CreateAccessLogSubscription",
  "vpc-lattice:CreateListener",
  "vpc-lattice:CreateRule",
  "vpc-lattice:CreateService",
  "vpc-lattice:CreateServiceNetwork",
  "vpc-lattice:CreateServiceNetworkServiceAssociation",
  "vpc-lattice:CreateServiceNetworkVpcAssociation",
  "vpc-lattice:CreateTargetGroup",
  "vpc-lattice:TagResource",
  "worklink:CreateFleet",
  "workmail:ListTagsForResource",
  "workmail:TagResource",
  "workmail:UntagResource",
  "workspaces:CreateConnectionAlias",
  "workspaces:CreateIpGroup",
  "workspaces:CreateTags",
  "workspaces:DeleteTags",
  "workspaces-web:CreateBrowserSettings",
  "workspaces-web:CreateIpAccessSettings",
  "workspaces-web:CreateNetworkSettings",
  "workspaces-web:CreatePortal",
  "workspaces-web:CreateTrustStore",
  "workspaces-web:CreateUserAccessLoggingSettings",
  "workspaces-web:CreateUserSettings",
  "amplify:CreateApp",
  "amplify:CreateBranch",
  "amplify:CreateDomainAssociation",
  "amplify:TagResource",
  "amplifyuibuilder:CreateComponent",
  "amplifyuibuilder:CreateForm",
  "amplifyuibuilder:CreateTheme",
  "amplifyuibuilder:StartCodegenJob",
  "appconfig:CreateApplication",
  "appconfig:CreateDeploymentStrategy",
  "appconfig:CreateExtension",
  "appconfig:CreateExtensionAssociation",
  "appfabric:CreateAppAuthorization",
  "appfabric:CreateAppBundle",
  "appfabric:CreateIngestion",
  "appfabric:CreateIngestionDestination",
  "appfabric:TagResource",
  "application-autoscaling:RegisterScalableTarget",
  "application-autoscaling:TagResource",
  "mgn:CreateApplication",
  "mgn:CreateLaunchConfigurationTemplate",
  "mgn:CreateReplicationConfigurationTemplate",
  "mgn:CreateVcenterClientForMgn",
  "mgn:CreateWave",
  "mgn:RegisterAgentForMgn",
  "appmesh:CreateGatewayRoute",
  "appmesh:CreateMesh",
  "appmesh:CreateRoute",
  "appmesh:CreateVirtualGateway",
  "appmesh:CreateVirtualNode",
  "appmesh:CreateVirtualRouter",
  "appmesh:CreateVirtualService",
  "appmesh:TagResource",
  "apprunner:CreateAutoScalingConfiguration",
  "apprunner:CreateConnection",
  "apprunner:CreateObservabilityConfiguration",
  "apprunner:CreateService",
  "apprunner:CreateVpcConnector",
  "apprunner:CreateVpcIngressConnection",
  "apprunner:TagResource",
  "appsync:CreateGraphqlApi",
  "auditmanager:CreateAssessment",
  "auditmanager:CreateAssessmentFramework",
  "auditmanager:CreateControl",
  "backup:CopyIntoBackupVault",
  "backup-gateway:CreateGateway",
  "backup-gateway:ImportHypervisorConfiguration",
  "batch:CreateComputeEnvironment",
  "batch:CreateJobQueue",
  "batch:CreateSchedulingPolicy",
  "batch:RegisterJobDefinition",
  "batch:SubmitJob",
  "batch:TagResource",
  "billingconductor:CreateCustomLineItem",
  "billingconductor:CreatePricingPlan",
  "billingconductor:CreatePricingRule",
  "bugbust:CreateEvent",
  "acm:RequestCertificate",
  "cleanrooms:CreateAnalysisTemplate",
  "cleanrooms:CreateCollaboration",
  "cleanrooms:CreateConfiguredTable",
  "cleanrooms:CreateConfiguredTableAssociation",
  "cleanrooms:CreateConfiguredTableAssociation",
  "cleanrooms:CreateMembership",
  "cloud9:CreateEnvironmentEC2",
  "cloud9:CreateEnvironmentSSH",
  "cloudformation:CreateStackSet",
  "cloudhsm:CopyBackupToRegion",
  "cloudhsm:CreateCluster",
  "cloudhsm:TagResource",
  "servicediscovery:CreateHttpNamespace",
  "servicediscovery:CreatePrivateDnsNamespace",
  "servicediscovery:CreatePublicDnsNamespace",
  "servicediscovery:TagResource",
  "servicediscovery:UntagResource",
  "cloudtrail:AddTags",
  "cloudtrail:CreateChannel",
  "cloudtrail:CreateEventDataStore",
  "cloudtrail:CreateTrail",
  "rum:CreateAppMonitor",
  "rum:TagResource",
  "rum:UntagResource",
  "codeartifact:CreateDomain",
  "codeartifact:CreateRepository",
  "codebuild:CreateProject",
  "codebuild:CreateReportGroup",
  "codebuild:UpdateProject",
  "codebuild:UpdateProjectVisibility",
  "codebuild:UpdateReportGroup",
  "codecommit:CreateRepository",
  "codecommit:TagResource",
  "codedeploy:CreateApplication",
  "codedeploy:CreateDeploymentGroup",
  "codedeploy:TagResource",
  "codepipeline:CreateCustomActionType",
  "codepipeline:CreatePipeline",
  "codepipeline:PutWebhook",
  "codepipeline:TagResource",
  "codestar:CreateProject",
  "codestar-connections:CreateConnection",
  "codestar-connections:CreateHost",
  "codestar-notifications:DeleteTarget",
  "codestar-notifications:ListTargets",
  "config:PutAggregationAuthorization",
  "config:PutConfigRule",
  "config:PutConfigurationAggregator",
  "config:PutStoredQuery",
  "config:TagResource",
  "ce:CreateAnomalyMonitor",
  "ce:CreateAnomalySubscription",
  "ce:CreateCostCategoryDefinition",
  "dms:CreateDataProvider",
  "dms:CreateEndpoint",
  "dms:CreateEventSubscription",
  "dms:CreateInstanceProfile",
  "dms:CreateReplicationInstance",
  "dms:CreateReplicationSubnetGroup",
  "dms:ImportCertificate",
  "dataexchange:CreateDataSet",
  "datapipeline:CreatePipeline",
  "datasync:CreateAgent",
  "datasync:CreateLocationAzureBlob",
  "datasync:CreateLocationEfs",
  "datasync:CreateLocationFsxLustre",
  "datasync:CreateLocationFsxOntap",
  "datasync:CreateLocationFsxOpenZfs",
  "datasync:CreateLocationFsxWindows",
  "datasync:CreateLocationHdfs",
  "datasync:CreateLocationNfs",
  "datasync:CreateLocationObjectStorage",
  "datasync:CreateLocationS3",
  "datasync:CreateLocationSmb",
  "deepcomposer:CreateComposition",
  "deepcomposer:CreateModel",
  "deepcomposer:TagResource",
  "deepcomposer:UntagResource",
  "deepracer:CreateCar",
  "deepracer:CreateLeaderboard",
  "devicefarm:CreateProject",
  "directconnect:AllocateHostedConnection",
  "directconnect:AllocatePrivateVirtualInterface",
  "directconnect:AllocatePublicVirtualInterface",
  "directconnect:AllocateTransitVirtualInterface",
  "directconnect:CreateConnection",
  "directconnect:CreateInterconnect",
  "directconnect:CreateLag",
  "directconnect:CreatePrivateVirtualInterface",
  "directconnect:CreatePublicVirtualInterface",
  "directconnect:CreateTransitVirtualInterface",
  "directconnect:TagResource",
  "ds:ConnectDirectory",
  "ds:CreateDirectory",
  "ds:CreateIdentityPoolDirectory",
  "ds:CreateMicrosoftAD",
  "elasticbeanstalk:AddTags",
  "elasticbeanstalk:CreateApplication",
  "elasticbeanstalk:CreateApplicationVersion",
  "elasticbeanstalk:CreateConfigurationTemplate",
  "elasticbeanstalk:CreateEnvironment",
  "elasticbeanstalk:CreatePlatformVersion",
  "elasticbeanstalk:UpdateTagsForResource",
  "drs:CreateExtendedSourceServer",
  "drs:CreateLaunchConfigurationTemplate",
  "drs:CreateReplicationConfigurationTemplate",
  "drs:CreateSourceNetwork",
  "drs:CreateSourceServerForDrs",
  "elasticloadbalancing:AddTags",
  "elasticloadbalancing:CreateLoadBalancer",
  "elasticloadbalancing:RemoveTags",
  "elasticloadbalancing:AddTags",
  "elasticloadbalancing:CreateListener",
  "elasticloadbalancing:CreateLoadBalancer",
  "elasticloadbalancing:CreateRule",
  "elasticloadbalancing:CreateTargetGroup",
  "elasticloadbalancing:RemoveTags",
  "elemental-appliances-software:CreateQuote",
  "elemental-appliances-software:TagResource",
  "elemental-activations:TagResource",
  "mediaconvert:CreatePreset",
  "mediaconvert:CreateQueue",
  "medialive:CreateChannel",
  "medialive:CreateInput",
  "medialive:CreateInputSecurityGroup",
  "medialive:CreateMultiplex",
  "medialive:CreatePartnerInput",
  "medialive:CreateTags",
  "medialive:PurchaseOffering",
  "medialive:UpdateInputSecurityGroup",
  "mediapackage:CreateChannel",
  "mediapackage:CreateHarvestJob",
  "mediapackage:CreateOriginEndpoint",
  "mediapackagev2:CreateChannel",
  "mediapackagev2:CreateChannelGroup",
  "mediapackagev2:CreateOriginEndpoint",
  "mediapackagev2:TagResource",
  "mediapackagev2:UntagResource",
  "mediapackage-vod:CreateAsset",
  "mediapackage-vod:CreatePackagingConfiguration",
  "mediapackage-vod:CreatePackagingGroup",
  "mediastore:CreateContainer",
  "mediatailor:CreateChannel",
  "mediatailor:CreateLiveSource",
  "mediatailor:CreateSourceLocation",
  "mediatailor:CreateVodSource",
  "mediatailor:PutPlaybackConfiguration",
  "entityresolution:CreateMatchingWorkflow",
  "entityresolution:CreateSchemaMapping",
  "entityresolution:TagResource",
  "entityresolution:UntagResource",
  "fis:CreateExperimentTemplate",
  "fis:StartExperiment",
  "fis:TagResource",
  "fis:UntagResource",
  "fis:UpdateExperimentTemplate",
  "fms:PutAppsList",
  "fms:PutPolicy",
  "fms:PutProtocolsList",
  "fms:PutResourceSet",
  "fms:TagResource",
  "globalaccelerator:CreateAccelerator",
  "globalaccelerator:CreateCustomRoutingAccelerator",
  "glue:CreateCrawler",
  "glue:CreateCustomEntityType",
  "glue:CreateDataQualityRuleset",
  "glue:CreateDevEndpoint",
  "glue:CreateMLTransform",
  "glue:CreateSession",
  "glue:ListCustomEntityTypes",
  "databrew:CreateDataset",
  "databrew:CreateProfileJob",
  "databrew:CreateProject",
  "databrew:CreateRecipe",
  "databrew:CreateRecipeJob",
  "databrew:CreateRuleset",
  "databrew:CreateSchedule",
  "groundstation:CreateConfig",
  "groundstation:CreateDataflowEndpointGroup",
  "groundstation:CreateEphemeris",
  "groundstation:CreateMissionProfile",
  "groundstation:ReserveContact",
  "medical-imaging:CreateDatastore",
  "healthlake:CreateFHIRDatastore",
  "omics:CreateReferenceStore",
  "omics:CreateRunGroup",
  "omics:CreateSequenceStore",
  "omics:CreateWorkflow",
  "omics:StartRun",
  "access-analyzer:CreateAnalyzer",
  "access-analyzer:GetAnalyzer",
  "access-analyzer:TagResource",
  "access-analyzer:UntagResource",
  "sso:CreatePermissionSet",
  "sso:TagResource",
  "sso:UntagResource",
  "iam:CreateInstanceProfile",
  "iam:CreateOpenIDConnectProvider",
  "iam:CreatePolicy",
  "iam:CreateRole",
  "iam:CreateSAMLProvider",
  "iam:CreateUser",
  "iam:CreateVirtualMFADevice",
  "iam:TagInstanceProfile",
  "iam:TagMFADevice",
  "iam:TagOpenIDConnectProvider",
  "iam:TagPolicy",
  "iam:TagRole",
  "iam:TagSAMLProvider",
  "iam:TagServerCertificate",
  "iam:TagUser",
  "iam:UploadServerCertificate",
  "rolesanywhere:CreateProfile",
  "rolesanywhere:CreateTrustAnchor",
  "rolesanywhere:ImportCrl",
  "iot:OpenTunnel",
  "iot:RegisterCACertificate",
  "iot1click:CreateProject",
  "iot1click:FinalizeDeviceClaim",
  "iot1click:TagResource",
  "iotanalytics:CreateChannel",
  "iotanalytics:CreateDataset",
  "iotanalytics:CreateDatastore",
  "iotanalytics:CreatePipeline",
  "iotanalytics:TagResource",
  "iotanalytics:UntagResource",
  "iotdeviceadvisor:CreateSuiteDefinition",
  "iotdeviceadvisor:StartSuiteRun",
  "iotevents:CreateAlarmModel",
  "iotevents:CreateDetectorModel",
  "iotevents:CreateInput",
  "iotevents:TagResource",
  "iotfleethub:CreateApplication",
  "iotfleetwise:CreateSignalCatalog",
  "iotfleetwise:ImportSignalCatalog",
  "greengrass:CreateConnectorDefinition",
  "greengrass:CreateCoreDefinition",
  "greengrass:CreateDeviceDefinition",
  "greengrass:CreateFunctionDefinition",
  "greengrass:CreateGroup",
  "greengrass:CreateLoggerDefinition",
  "greengrass:CreateResourceDefinition",
  "greengrass:CreateSubscriptionDefinition",
  "greengrass:StartBulkDeployment",
  "greengrass:CreateDeployment",
  "iotsitewise:CreateAssetModel",
  "iotsitewise:CreateGateway",
  "iotsitewise:CreatePortal",
  "iottwinmaker:CreateWorkspace",
  "iotwireless:AssociateAwsAccountWithPartnerAccount",
  "iotwireless:CreateDestination",
  "iotwireless:CreateDeviceProfile",
  "iotwireless:CreateFuotaTask",
  "iotwireless:CreateMulticastGroup",
  "iotwireless:CreateServiceProfile",
  "iotwireless:CreateWirelessDevice",
  "iotwireless:CreateWirelessGateway",
  "iotwireless:CreateWirelessGatewayTaskDefinition",
  "kms:CreateKey",
  "lambda:CreateFunction",
  "lambda:TagResource",
  "license-manager:CreateLicenseConfiguration",
  "license-manager:CreateLicenseManagerReportGenerator",
  "m2:CreateApplication",
  "m2:CreateEnvironment",
  "aws-marketplace:StartChangeSet",
  "aws-marketplace:TagResource",
  "vendor-insights:CreateDataSource",
  "vendor-insights:CreateSecurityProfile",
  "migrationhub-orchestrator:CreateWorkflow",
  "refactor-spaces:CreateApplication",
  "refactor-spaces:CreateEnvironment",
  "refactor-spaces:CreateRoute",
  "refactor-spaces:CreateService",
  "network-firewall:CreateFirewall",
  "network-firewall:CreateFirewallPolicy",
  "network-firewall:CreateRuleGroup",
  "network-firewall:CreateTLSInspectionConfiguration",
  "network-firewall:TagResource",
  "networkmanager:CreateGlobalNetwork",
  "organizations:CreateAccount",
  "organizations:CreateGovCloudAccount",
  "organizations:CreatePolicy",
  "outposts:CreateSite",
  "panorama:CreateApplicationInstance",
  "panorama:CreatePackage",
  "panorama:ProvisionDevice",
  "payment-cryptography:CreateKey",
  "payment-cryptography:ImportKey",
  "pi:CreatePerformanceAnalysisReport",
  "pi:TagResource",
  "pca-connector-ad:CreateConnector",
  "pca-connector-ad:CreateDirectoryRegistration",
  "acm-pca:CreateCertificateAuthority",
  "proton:CreateEnvironmentAccountConnection",
  "purchase-orders:AddPurchaseOrder",
  "purchase-orders:ModifyPurchaseOrders",
  "purchase-orders:TagResource",
  "rbin:CreateRule",
  "rbin:TagResource",
  "resiliencehub:CreateApp",
  "resiliencehub:CreateResiliencyPolicy",
  "ram:CreatePermission",
  "ram:CreateResourceShare",
  "ram:GetResourceShares",
  "resource-explorer-2:CreateIndex",
  "resource-explorer-2:CreateView",
  "resource-groups:CreateGroup",
  "robomaker:CreateDeploymentJob",
  "robomaker:CreateFleet",
  "robomaker:CreateRobot",
  "robomaker:CreateRobotApplication",
  "robomaker:CreateSimulationApplication",
  "robomaker:CreateSimulationJob",
  "robomaker:CreateWorldTemplate",
  "robomaker:StartSimulationJobBatch",
  "savingsplans:CreateSavingsPlan",
  "secretsmanager:CreateSecret",
  "secretsmanager:TagResource",
  "securityhub:CreateAutomationRule",
  "sts:AssumeRole",
  "sts:AssumeRoleWithSAML",
  "sts:AssumeRoleWithWebIdentity",
  "sts:GetFederationToken",
  "sts:TagSession",
  "servicecatalog:CreateApplication",
  "servicecatalog:CreateAttributeGroup",
  "servicecatalog:CreatePortfolio",
  "servicecatalog:CreateProduct",
  "servicecatalog:TagResource",
  "servicecatalog:UntagResource",
  "servicecatalog:UpdatePortfolio",
  "servicecatalog:UpdateProduct",
  "private-networks:ActivateNetworkSite",
  "private-networks:CreateNetwork",
  "private-networks:CreateNetworkSite",
  "private-networks:StartNetworkResourceUpdate",
  "private-networks:TagResource",
  "shield:CreateProtection",
  "shield:CreateProtectionGroup",
  "signer:PutSigningProfile",
  "simspaceweaver:StartSimulation",
  "snow-device-management:CreateTask",
  "snow-device-management:ListTagsForResource",
  "sqlworkbench:CreateChart",
  "sqlworkbench:CreateConnection",
  "sqlworkbench:CreateNotebook",
  "sqlworkbench:CreateNotebookCell",
  "sqlworkbench:CreateNotebookFromVersion",
  "sqlworkbench:CreateNotebookVersion",
  "sqlworkbench:CreateSavedQuery",
  "sqlworkbench:DuplicateNotebook",
  "sqlworkbench:ImportNotebook",
  "sqlworkbench:RestoreNotebookVersion",
  "sqlworkbench:TagResource",
  "sqlworkbench:UntagResource",
  "sqlworkbench:UpdateChart",
  "sqlworkbench:UpdateConnection",
  "sqlworkbench:UpdateNotebook",
  "sqlworkbench:UpdateNotebookCellContent",
  "sqlworkbench:UpdateNotebookCellLayout",
  "sqlworkbench:UpdateSavedQuery",
  "states:CreateActivity",
  "states:CreateStateMachine",
  "states:TagResource",
  "states:UpdateStateMachine",
  "storagegateway:ActivateGateway",
  "storagegateway:CreateTapePool",
  "scn:TagResource",
  "scn:UntagResource",
  "ssm:CreateActivation",
  "ssm:CreateMaintenanceWindow",
  "ssm:CreateOpsItem",
  "ssm:CreateOpsMetadata",
  "ssm:CreatePatchBaseline",
  "ssm:RegisterManagedInstance",
  "ssm-sap:RegisterApplication",
  "ssm-incidents:CreateReplicationSet",
  "ssm-incidents:CreateResponsePlan",
  "ssm-contacts:CreateContact",
  "ssm-contacts:CreateRotation",
  "ssm-contacts:TagResource",
  "tnb:CreateSolFunctionPackage",
  "tnb:CreateSolNetworkInstance",
  "tnb:CreateSolNetworkPackage",
  "tnb:InstantiateSolNetworkInstance",
  "tnb:TagResource",
  "tnb:TerminateSolNetworkInstance",
  "tnb:UpdateSolNetworkInstance",
  "transfer:CreateConnector",
  "transfer:CreateProfile",
  "transfer:CreateServer",
  "transfer:CreateWorkflow",
  "transfer:ImportCertificate",
  "notifications:CreateNotificationConfiguration",
  "notifications-contacts:CreateEmailContact",
  "waf:CreateRateBasedRule",
  "waf:CreateRule",
  "waf:CreateRuleGroup",
  "waf:CreateWebACL",
  "waf:TagResource",
  "waf-regional:CreateRateBasedRule",
  "waf-regional:CreateRule",
  "waf-regional:CreateRuleGroup",
  "waf-regional:CreateWebACL",
  "waf-regional:TagResource",
  "wafv2:CreateIPSet",
  "wafv2:CreateRegexPatternSet",
  "wafv2:CreateRuleGroup",
  "wafv2:CreateWebACL",
  "wafv2:TagResource",
  "wellarchitected:CreateProfile",
  "wellarchitected:CreateWorkload",
  "wellarchitected:ImportLens",
  "wickr:TagResource",
  "xray:CreateGroup",
  "xray:CreateSamplingRule",
  "xray:TagResource",
  "connect-campaigns:ListCampaigns",
  "servicequotas:TagResource",
  "servicequotas:UntagResource"
]
